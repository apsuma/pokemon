{"version":3,"sources":["models/mock-pokemon.ts","services/pokemon-service.ts","hooks/pokemon.hook.ts","helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["POKEMONS","id","name","hp","cp","picture","types","created","Date","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","pokemon","Object","keys","length","method","body","JSON","stringify","headers","index","findIndex","filter","requestOptions","push","term","includes","console","process","usePokemons","useState","setPokemons","useEffect","getPokemons","formatDate","date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","borderColor","setColor","history","useHistory","className","onClick","onMouseEnter","onMouseLeave","style","src","alt","map","key","PokemonSearch","setTerm","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","newField","addPokemon","updatePokemon","isAddForm","validateForm","newForm","startsWith","endsWith","test","isTypesValid","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","fieldValue","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","PokemonDetail","ReactDOM","document","getElementById"],"mappings":"yQA8MeA,EA5MoB,CAClC,CACCC,GAAI,EACJC,KAAM,aACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,SAAU,UAClBC,QAAS,IAAIC,MAEd,CACCP,GAAI,EACJC,KAAM,eACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,OACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,EACJC,KAAM,WACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,OACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,EACJC,KAAM,UACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,UAAW,UACnBC,QAAS,IAAIC,MAEd,CACCP,GAAI,EACJC,KAAM,UACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,SAAU,OAClBC,QAAS,IAAIC,MAEd,CACCP,GAAI,EACJC,KAAM,UACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,UACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,EACJC,KAAM,WACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,SAAU,OAClBC,QAAS,IAAIC,MAEd,CACCP,GAAI,EACJC,KAAM,MACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,UACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,EACJC,KAAM,UACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,YACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,YACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,UACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,gBACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,UACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,UACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,OACRC,QAAS,IAAIC,MAEf,CACEP,GAAI,GACJC,KAAM,SACNC,GAAI,IACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CAAC,OACRC,QAAS,IAAIC,MAEf,CACCP,GAAI,GACJC,KAAM,YACNC,GAAI,IACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CACP,SACA,UAEAC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,cACNC,GAAI,IACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CACP,UACA,UAEAC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,UACNC,GAAI,IACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CACP,UAEAC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,WACNC,GAAI,IACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CACP,OAEAC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,WACNC,GAAI,IACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CACP,OAEAC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,WACNC,GAAI,IACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CAAC,SAAU,UAClBC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,aACNC,GAAI,IACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CAAC,MAAO,UACfC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,YACNC,GAAI,IACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CAAC,UACRC,QAAS,IAAIC,OCvMOC,E,2GAMuB,IAAD,OACvC,OAAIC,KAAKC,MACAC,MAAM,kCACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAE9B,IAAIE,SAAS,SAAAC,GAClBA,EAAQ,EAAKC,e,iCAICpB,GAAoC,IAAD,OACnD,OAAIS,KAAKC,MACAC,MAAM,kCAAD,OAAmCX,IAC9CY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAS,GAAI,OAAI,EAAKC,QAAQD,GAAQ,KAAOA,KACzCN,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAE5B,IAAIE,SAAQ,SAAAC,GACjBA,EAAQ,EAAKC,SAASG,MAAK,SAAAC,GAAO,OAAIxB,IAAOwB,EAAQxB,Y,8BAI1CqB,GACb,OAAoC,IAA7BI,OAAOC,KAAKL,GAAMM,S,oCAGNH,GAAqC,IAAD,OACvD,OAAIf,KAAKC,MACAC,MAAM,kCAAD,OAAmCa,EAAQxB,IAAM,CAC3D4B,OAAQ,MACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CAAE,eAAgB,sBAE5BpB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAE5B,IAAIE,SAAQ,SAAAC,GAAY,IACrBnB,EAAOwB,EAAPxB,GACFiC,EAAQ,EAAKb,SAASc,WAAU,SAAAV,GAAO,OAAIA,EAAQxB,KAAOA,KAChE,EAAKoB,SAASa,GAAST,EACvBL,EAAQK,Q,oCAISA,GAAgC,IAAD,OAClD,OAAIf,KAAKC,MACAC,MAAM,kCAAD,OAAmCa,EAAQxB,IAAM,CAC3D4B,OAAQ,SACRI,QAAS,CAAE,eAAgB,sBAE5BpB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAE5B,IAAIE,SAAQ,SAAAC,GAAY,IACrBnB,EAAOwB,EAAPxB,GACR,EAAKoB,SAAW,EAAKA,SAASe,QAAO,SAAAX,GAAO,OAAIA,EAAQxB,KAAOA,KAC/DmB,EAAQ,S,iCAIMK,GAAoC,IAAD,OAGnD,GAFAA,EAAQlB,QAAU,IAAIC,KAAKiB,EAAQlB,SAE/BG,KAAKC,MAAM,CACb,IAAM0B,EAAiB,CACrBR,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CAAE,eAAgB,qBAE7B,OAAOrB,MAAM,iCAAkCyB,GAC9CxB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAEnC,OAAO,IAAIE,SAAQ,SAAAC,GACjB,EAAKC,SAASiB,KAAKb,GACnBL,EAAQK,Q,oCAISc,GAAkC,IAAD,OACpD,OAAI7B,KAAKC,MACAC,MAAM,oCAAD,OAAqC2B,IAChD1B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAE5B,IAAIE,SAAQ,SAAAC,GAEjBA,EADgB,EAAKC,SAASe,QAAO,SAAAX,GAAO,OAAIA,EAAQvB,KAAKsC,SAASD,Y,kCAMvDtB,GACfwB,QAAQxB,MAAMA,O,KApGCR,EAEZY,SAAqBrB,EAFTS,EAIZE,OAAkC+B,ECF3C,IAUeC,EAVK,WAAO,IAAD,EACWC,mBAAoB,IAD/B,mBACdvB,EADc,KACJwB,EADI,KAOtB,OAJAC,qBAAU,WACNrC,EAAesC,cAAclC,MAAK,SAAAQ,GAAQ,OAAIwB,EAAYxB,QAC3D,IAEIA,GCRQ2B,G,MAJI,WAAqC,IAApCC,EAAmC,uDAAvB,IAAIzC,KAChC,MAAM,GAAN,OAAUyC,EAAKC,UAAf,YAA4BD,EAAKE,WAAW,EAA5C,YAAiDF,EAAKG,iBC4C3CC,EA7CA,SAACC,GACZ,IAAIC,EAEJ,OAAQD,GACJ,IAAK,MACLC,EAAQ,gBACR,MACA,IAAK,MACLA,EAAQ,iBACR,MACA,IAAK,SACLA,EAAQ,kBACR,MACA,IAAK,UACLA,EAAQ,kBACR,MACA,IAAK,SACLA,EAAQ,iBACR,MACA,IAAK,MACLA,EAAQ,iBACR,MACA,IAAK,SACLA,EAAQ,uBACR,MACA,IAAK,SACLA,EAAQ,iBACR,MACA,IAAK,MACLA,EAAQ,uBACR,MACA,IAAK,WACLA,EAAQ,gBACR,MACA,IAAK,SACLA,EAAQ,cACR,MACA,QACAA,EAAQ,OAIZ,MAAM,QAAN,OAAeA,ICSRC,EAvC+B,SAAC,GAAuC,IAAtC/B,EAAqC,EAArCA,QAAqC,IAA5BgC,mBAA4B,MAAf,UAAe,IACvDb,qBADuD,mBAC1EW,EAD0E,KACnEG,EADmE,KAE3EC,EAAUC,cAchB,OACI,yBAAKC,UAAU,YACXC,QAAS,kBANK7D,EAMcwB,EAAQxB,QALxC0D,EAAQrB,KAAR,oBAA0BrC,IADT,IAACA,GAOd8D,aAfW,WACfL,EAASD,IAeLO,aAZW,WACfN,EAAS,aAYL,yBAAKG,UAAU,kBAAmBI,MAAO,CAAER,YAAaF,IACpD,yBAAKM,UAAU,cACf,yBAAKK,IAAKzC,EAAQpB,QAAS8D,IAAK1C,EAAQvB,QAExC,yBAAK2D,UAAU,gBACX,yBAAKA,UAAU,gBACX,2BAAIpC,EAAQvB,MACZ,2BAAG,+BAAQ8C,EAAWvB,EAAQlB,WAC7BkB,EAAQnB,MAAM8D,KAAI,SAAAd,GAAI,OACvB,0BAAMe,IAAKf,EAAMO,UAAWR,EAAWC,IAAQA,WCExDgB,EAvC0B,WAAO,IAAD,EAErB1B,mBAAiB,IAFI,mBAEtCL,EAFsC,KAEhCgC,EAFgC,OAGb3B,mBAAoB,IAHP,mBAGtCvB,EAHsC,KAG5BwB,EAH4B,KAiB7C,OACE,yBAAKgB,UAAU,OACf,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,QACf,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,eACf,2BAAOP,KAAK,OAAOkB,YAAY,2BAAwBC,MAAOlC,EAAMmC,SAAU,SAAAC,GAAC,OAlB3D,SAACA,GACzB,IAAMpC,EAAOoC,EAAEC,OAAOH,MACtBF,EAAQhC,GAELA,EAAKX,QAAU,EAChBiB,EAAY,IAIdpC,EAAeoE,cAActC,GAAM1B,MAAK,SAAAQ,GAAQ,OAAIwB,EAAYxB,MASuByD,CAAkBH,OAErG,yBAAKd,UAAU,cACdxC,EAAS+C,KAAI,SAAC3C,GAAD,OACZ,kBAAC,IAAD,CAAM4C,IAAK5C,EAAQxB,GAAI8E,GAAE,oBAAetD,EAAQxB,IAAM4D,UAAU,mBAC7DpC,EAAQvB,eCJN8E,EAvBwB,WACnC,IAAM3D,EAAWsB,IAEpB,OACC,6BACE,wBAAIkB,UAAU,UAAd,WACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAAMkB,GAAI,gBAAiBlB,UAAU,yDACjC,uBAAGA,UAAU,kBAAb,SAGR,yBAAKA,UAAU,OACX,kBAAC,EAAD,MACExC,EAAS+C,KAAI,SAAC3C,GAAD,OACX,kBAAE,EAAF,CAAc4C,IAAK5C,EAAQxB,GAAIwB,QAASA,WCDzCwD,EAlBmB,WAEhC,OACE,yBAAKpB,UAAU,gCACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YAEjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACnB,yBAAKA,UAAU,eC+DVqB,EAlEwD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAEtDvC,mBAAuB,MAF+B,mBAE7EnB,EAF6E,KAEpE2D,EAFoE,KASpF,OALAtC,qBAAU,WACRrC,EAAe4E,YAAYF,EAAMG,OAAOrF,IACvCY,MAAK,SAAAY,GAAO,OAAK2D,EAAW3D,QAC5B,CAAC0D,EAAMG,OAAOrF,KAGf,6BACIwB,EACA,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,iBAAkBpC,EAAQvB,MACxC,yBAAK2D,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKK,IAAKzC,EAAQpB,QAAS8D,IAAK1C,EAAQvB,KAAM+D,MAAO,CAACsB,MAAO,QAASC,OAAQ,YAC9E,kBAAC,IAAD,CAAMT,GAAE,yBAAoBtD,EAAQxB,IAAM4D,UAAU,yDAClD,uBAAGA,UAAU,kBAAb,UAGJ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,2BAAOA,UAAU,oBACf,+BACE,4BACE,mCACA,4BAAI,gCAAUpC,EAAQvB,QAExB,4BACE,6CACA,4BAAI,gCAAUuB,EAAQtB,MAExB,4BACE,4CACA,4BAAI,gCAAUsB,EAAQrB,MAExB,4BACE,qCACA,4BACGqB,EAAQnB,MAAM8D,KAAI,SAAAd,GAAI,OACtB,0BAAMe,IAAKf,EAAMO,UAAWR,EAAWC,IAAQA,QAGpD,4BACE,mDACA,4BAAKN,EAAWvB,EAAQlB,cAKhC,yBAAKsD,UAAU,eACb,kBAAC,IAAD,CAAMkB,GAAG,aAAT,eAOV,wBAAIlB,UAAU,UAAS,kBAAC,EAAD,SCtDhB4B,EAbyB,WAEtC,OACE,yBAAK5B,UAAU,UACb,yBAAKK,IAAI,iEAAiEC,IAAI,wBAC9E,8DACA,kBAAC,IAAD,CAAMY,GAAG,IAAIlB,UAAU,oCAAvB,8B,eC+OS6B,EA/N+B,SAAC,GAA2B,IAA1BjE,EAAyB,EAAzBA,QAASkE,EAAgB,EAAhBA,WAAgB,EAC/C/C,mBAAe,CACnCvC,QAAS,CAACoE,MAAOhD,EAAQpB,SACzBH,KAAM,CAACuE,MAAOhD,EAAQvB,KAAM0F,SAAS,GACrCzF,GAAI,CAACsE,MAAOhD,EAAQtB,GAAIyF,SAAS,GACjCxF,GAAI,CAACqE,MAAOhD,EAAQrB,GAAIwF,SAAS,GACjCtF,MAAO,CAACmE,MAAOhD,EAAQnB,MAAOsF,SAAS,KAN4B,mBAChEC,EADgE,KAC1DC,EAD0D,KASnEnC,EAAUC,cAORmC,EAAU,SAACzC,GACb,OAAOuC,EAAKvF,MAAMmE,MAAMjC,SAASc,IAoB/BwB,EAAoB,SAACH,GACzB,IAAMqB,EAAoBrB,EAAEC,OAAO1E,KAE7B+F,EAAkB,CAAExB,MADCE,EAAEC,OAAOH,OAGpCqB,EAAQ,2BAAID,GAAL,eAAiBG,EAAYC,MAiBhCC,EAAa,WACjBzF,EAAeyF,WAAWzE,GACzBZ,MAAO,kBAAM8C,EAAQrB,KAAR,iBAGV6D,EAAgB,WACpB1F,EAAe0F,cAAc1E,GAC5BZ,MAAO,kBAAM8C,EAAQrB,KAAR,oBAA0Bb,EAAQxB,SAG5CmG,EAAY,WAChB,OAAQT,GAEJU,EAAe,WACnB,IAAIC,EAAgBT,EAGpB,GAAGO,IAAa,CAKd,GAAIP,EAAKxF,QAAQoE,MAAM8B,WAHT,+DAG+BV,EAAKxF,QAAQoE,MAAM+B,SAFpD,QAML,CACL,IAAMP,EAAkB,CAAExB,MAAOoB,EAAKxF,QAAQoE,MAAOxD,MAAO,GAAI2E,SAAS,GACzEU,EAAO,2BAAQA,GAAY,CAAEjG,QAAS4F,QANuC,CAC7E,IACMA,EAAkB,CAAExB,MAAOoB,EAAKxF,QAAQoE,MAAOxD,MAD5B,0BAC6C2E,SAAS,GAC/EU,EAAO,2BAAQA,GAAY,CAAEjG,QAAS4F,KAQ1C,GAAI,4CAA0BQ,KAAKZ,EAAK3F,KAAKuE,OAItC,CACL,IAAMwB,EAAkB,CAAExB,MAAOoB,EAAK3F,KAAKuE,MAAOxD,MAAO,GAAI2E,SAAS,GACtEU,EAAO,2BAAQA,GAAY,CAAEpG,KAAM+F,QANgB,CACnD,IACMA,EAAkB,CAAExB,MAAOoB,EAAK3F,KAAKuE,MAAOxD,MADzB,0CAC0C2E,SAAS,GAC5EU,EAAO,2BAAQA,GAAY,CAAEpG,KAAM+F,IAOrC,GAAI,eAAeQ,KAAKZ,EAAK1F,GAAGsE,OAIzB,CACL,IAAMwB,EAAkB,CAAExB,MAAOoB,EAAK1F,GAAGsE,MAAOxD,MAAO,GAAI2E,SAAS,GACpEU,EAAO,2BAAQA,GAAY,CAAEnG,GAAI8F,QANK,CACtC,IACMA,EAAkB,CAACxB,MAAOoB,EAAK1F,GAAGsE,MAAOxD,MADtB,+DACuC2E,SAAS,GACzEU,EAAO,2BAAQA,GAAY,CAAEnG,GAAI8F,IAOnC,GAAI,eAAeQ,KAAKZ,EAAKzF,GAAGqE,OAIzB,CACL,IAAMwB,EAAkB,CAAExB,MAAOoB,EAAKzF,GAAGqE,MAAOxD,MAAO,GAAI2E,SAAS,GACpEU,EAAO,2BAAQA,GAAY,CAAElG,GAAI6F,QANK,CACtC,IACMA,EAAkB,CAACxB,MAAOoB,EAAKzF,GAAGqE,MAAOxD,MADtB,4DACuC2E,SAAS,GACzEU,EAAO,2BAAQA,GAAY,CAAElG,GAAI6F,IAOnC,OADAH,EAAQQ,GACDA,EAAQpG,KAAK0F,SAAWU,EAAQnG,GAAGyF,SAAWU,EAAQlG,GAAGwF,SAG9Dc,EAAe,SAACpD,GAGlB,OAAgC,IAA5BuC,EAAKvF,MAAMmE,MAAM7C,SAAgBmE,EAAQzC,OAMzCuC,EAAKvF,MAAMmE,MAAM7C,QAAU,IAAMmE,EAAQzC,KAa/C,OACE,0BAAMqD,SAAU,SAAAhC,GAAC,OAvGE,SAACA,GACpBA,EAAEiC,iBACkBP,MAGpB5E,EAAQvB,KAAO2F,EAAK3F,KAAKuE,MACzBhD,EAAQtB,GAAK0F,EAAK1F,GAAGsE,MACrBhD,EAAQrB,GAAKyF,EAAKzF,GAAGqE,MACpB2B,MAAiB3E,EAAQpB,QAAUwF,EAAKxF,QAAQoE,OACjDhD,EAAQnB,MAAQuF,EAAKvF,MAAMmE,MAC3BkB,EAAaQ,IAAkBD,KA6FVW,CAAalC,KAChC,yBAAKd,UAAU,OACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,kBACX8B,GACF,yBAAK9B,UAAU,cAEb,yBAAKK,IAAKzC,EAAQpB,QAAS8D,IAAK1C,EAAQvB,KAAM+D,MAAO,CAACsB,MAAO,QAASC,OAAQ,YAC9E,0BAAM3B,UAAU,qDACd,uBAAGC,QAdK,WACpBrD,EAAeqG,cAAcrF,GAASZ,MAAK,kBAAM8C,EAAQrB,KAAR,iBAaVuB,UAAU,kBAArC,YAIJ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBAEXuC,KACF,yBAAKvC,UAAU,cACb,2BAAOkD,QAAQ,WAAf,gBACA,2BAAO9G,GAAG,UAAUC,KAAK,UAAUoD,KAAK,OAAOO,UAAU,eAAeY,MAAOoB,EAAKxF,QAAQoE,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MACnIkB,EAAKxF,QAAQY,OACZ,yBAAK4C,UAAU,2BAAf,IAA2CgC,EAAKxF,QAAQY,MAAxD,MAIJ,yBAAK4C,UAAU,cACb,2BAAOkD,QAAQ,QAAf,OACA,2BAAO9G,GAAG,OAAOC,KAAK,OAAOoD,KAAK,OAAOO,UAAU,eAAeY,MAAOoB,EAAK3F,KAAKuE,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAC1HkB,EAAK3F,KAAKe,OACT,yBAAK4C,UAAU,2BAAf,IAA2CgC,EAAK3F,KAAKe,MAArD,MAIJ,yBAAK4C,UAAU,cACb,2BAAOkD,QAAQ,MAAf,gBACA,2BAAO9G,GAAG,KAAKC,KAAK,KAAKoD,KAAK,SAASO,UAAU,eAAeY,MAAOoB,EAAK1F,GAAGsE,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MACtHkB,EAAK1F,GAAGc,OACP,yBAAK4C,UAAU,2BAAf,IAA2CgC,EAAK1F,GAAGc,MAAnD,MAIJ,yBAAK4C,UAAU,cACb,2BAAOkD,QAAQ,MAAf,gBACA,2BAAO9G,GAAG,KAAKC,KAAK,KAAKoD,KAAK,SAASO,UAAU,eAAeY,MAAOoB,EAAKzF,GAAGqE,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MACtHkB,EAAKzF,GAAGa,OACP,yBAAK4C,UAAU,2BAAf,IAA2CgC,EAAKzF,GAAGa,MAAnD,MAIJ,yBAAK4C,UAAU,cACb,wCA3LQ,CACtB,SAAU,MAAO,MAAO,UAAW,SAAU,WAC7C,SAAU,YAAQ,MAAO,SAAU,OA0LdO,KAAI,SAAAd,GAAI,OACb,yBAAKe,IAAKf,EAAMW,MAAO,CAAC+C,aAAc,SACpC,+BACE,2BAAO/G,GAAIqD,EAAMA,KAAK,WAAWO,UAAU,YAAYY,MAAOnB,EAAM2D,UAAWP,EAAapD,GAAO4D,QAASnB,EAAQzC,GAAOoB,SAAU,SAAAC,GAAC,OAtLzI,SAACrB,EAAcqB,GAChC,IACIsB,EADYtB,EAAEC,OAAOsC,QAMvBjB,EAAW,CAAExB,MADcoB,EAAKvF,MAAMmE,MAAM0C,OAAO,CAAC7D,KAKpD2C,EAAW,CAAExB,MADcoB,EAAKvF,MAAMmE,MAAMrC,QAAO,SAACgF,GAAD,OAAyBA,IAAgB9D,MAI9FwC,EAAQ,2BAAID,GAAS,CAAEvF,MAAO2F,KAwKgIoB,CAAW/D,EAAMqB,MAC3J,8BACE,uBAAGd,UAAWR,EAAWC,IAASA,WAO9C,yBAAKO,UAAU,sBAEb,4BAAQP,KAAK,SAASO,UAAU,OAAhC,kBC7MDyD,EAvBqD,SAAC,GAAe,IAAbnC,EAAY,EAAZA,MAAY,EAEnDvC,mBAAuB,MAF4B,mBAE1EnB,EAF0E,KAEjE2D,EAFiE,KASjF,OALAtC,qBAAU,WACRrC,EAAe4E,YAAYF,EAAMG,OAAOrF,IACvCY,MAAK,SAAAY,GAAO,OAAK2D,EAAW3D,QAC5B,CAAC0D,EAAMG,OAAOrF,KAGf,6BACIwB,EACA,yBAAKoC,UAAU,OACX,wBAAIA,UAAU,iBAAd,aAAuCpC,EAAQvB,MAC/C,kBAAC,EAAD,CAAauB,QAASA,EAASkE,YAAY,KAG/C,wBAAI9B,UAAU,UAAS,kBAAC,EAAD,SC3BV0D,EAWpB,WACCtH,GAOE,IANFE,EAMC,uDANY,IACbC,EAKC,uDALY,GACbF,EAIC,uDAJc,MACfG,EAGC,uDAHiB,oEAClBC,EAEC,uDAFsB,CAAC,UACxBC,EACC,uDADe,IAAIC,KACnB,yBAjBFP,QAiBE,OAhBFE,QAgBE,OAfFC,QAeE,OAdFF,UAcE,OAbFG,aAaE,OAZFC,WAYE,OAXFC,aAWE,EAEDG,KAAKT,GAAKA,EACVS,KAAKP,GAAKA,EACVO,KAAKN,GAAKA,EACVM,KAAKR,KAAOA,EACZQ,KAAKL,QAAUA,EACfK,KAAKJ,MAAQA,EACbI,KAAKH,QAAUA,GCNFiH,EAduB,WAAO,IAAD,EAC7B5E,oBAAiB,IAAIpC,MAAOiH,WAAlCxH,EADmC,sBAExB2C,mBAAkB,IAAI2E,EAAQtH,IAAzCwB,EAFmC,oBAI1C,OACE,6BACI,yBAAKoC,UAAU,OACX,wBAAIA,UAAU,iBAAd,8BACA,kBAAC,EAAD,CAAapC,QAASA,EAASkE,YAAY,OCflC+B,E,mGAGJC,EAAkBC,GAAqC,IAAD,OACzDC,EAAgC,UAAbF,GAAoC,UAAZC,EAEjD,OAAO,IAAIzG,SAAQ,SAAAC,GACf0G,YAAY,WACR,EAAKD,gBAAkBA,EACvBzG,EAAQyG,KACT,Y,KAVMH,EACVG,iBAA0B,ECcrC,IA8GeE,EA9GkB,WAE/B,IAAMpE,EAAUC,cAFqB,EAIbhB,mBAAe,CACrC+E,SAAU,CAAElD,MAAO,IACnBmD,SAAU,CAAEnD,MAAO,MANgB,mBAI9BoB,EAJ8B,KAIxBC,EAJwB,OASPlD,mBAAiB,kDATV,mBAS9BoF,EAT8B,KASrBC,EATqB,KAW/BnD,EAAoB,SAACH,GACzB,IAAMqB,EAAoBrB,EAAEC,OAAO1E,KAC7BgI,EAAqBvD,EAAEC,OAAOH,MAC9BwB,EAAe,eAAMD,EAAY,CAAEvB,MAAOyD,IAEhDpC,EAAQ,2BAAKD,GAASI,KA+BlBY,EAAe,SAAClC,GACpBA,EAAEiC,iBA7BiB,WACnB,IAAIN,EAAgBT,EAGpB,GAAGA,EAAK8B,SAASlD,MAAM7C,OAAS,EAAG,CACjC,IACMqE,EAAkB,CAAExB,MAAOoB,EAAK8B,SAASlD,MAAOxD,MAD7B,+DAC8C2E,SAAS,GAChFU,EAAO,2BAAQA,GAAY,CAAEqB,SAAU1B,QAClC,CACL,IAAMA,EAAkB,CAAExB,MAAOoB,EAAK8B,SAASlD,MAAOxD,MAAO,GAAI2E,SAAS,GAC1EU,EAAO,2BAAQA,GAAY,CAAEqB,SAAU1B,IAIzC,GAAGJ,EAAK+B,SAASnD,MAAM7C,OAAS,EAAG,CACjC,IACMqE,EAAkB,CAACxB,MAAOoB,EAAK+B,SAASnD,MAAOxD,MAD5B,kEAC6C2E,SAAS,GAC/EU,EAAO,2BAAQA,GAAY,CAAEsB,SAAU3B,QAClC,CACL,IAAMA,EAAkB,CAAExB,MAAOoB,EAAK+B,SAASnD,MAAOxD,MAAO,GAAI2E,SAAS,GAC1EU,EAAO,2BAAQA,GAAY,CAAEsB,SAAU3B,IAKzC,OAFAH,EAAQQ,GAEDA,EAAQqB,SAAS/B,SAAWU,EAAQsB,SAAShC,QAKhCS,KAElB4B,EAAW,oDACXP,EAAsBS,MAAMtC,EAAK8B,SAASlD,MAAOoB,EAAK+B,SAASnD,OAAO5D,MAAK,SAAAgH,GACrEA,EAKJlE,EAAQrB,KAAK,aAJX2F,EAAW,4DAUnB,OACE,0BAAMtB,SAAU,SAAChC,GAAD,OAAOkC,EAAalC,KAClC,yBAAKd,UAAU,OACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBAEZmE,GAAW,yBAAKnE,UAAU,cACzB,yBAAKA,UAAU,6BACZmE,IAIL,yBAAKnE,UAAU,cACb,2BAAOkD,QAAQ,YAAf,eACA,2BAAO9G,GAAG,WAAWqD,KAAK,OAAOpD,KAAK,WAAW2D,UAAU,eAAeY,MAAOoB,EAAK8B,SAASlD,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAEtIkB,EAAK8B,SAAS1G,OACf,yBAAK4C,UAAU,2BACbgC,EAAK8B,SAAS1G,QAIlB,yBAAK4C,UAAU,cACb,2BAAOkD,QAAQ,YAAf,gBACA,2BAAO9G,GAAG,WAAWqD,KAAK,WAAWpD,KAAK,WAAW2D,UAAU,eAAeY,MAAOoB,EAAK+B,SAASnD,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAE1IkB,EAAK+B,SAAS3G,OACf,yBAAK4C,UAAU,2BACbgC,EAAK+B,SAAS3G,SAIpB,yBAAK4C,UAAU,sBAEb,4BAAQP,KAAK,SAASO,UAAU,OAAhC,kB,QCpGDuE,EAXM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCACnB,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAACC,GAExB,OADwBf,EAAsBG,gBAKvC,kBAACQ,EAAcI,GAHb,kBAAC,IAAD,CAAU1D,GAAI,CAAE2D,SAAU,iBC0BxBC,EAxBgB,WAC7B,OACE,kBAAC,IAAD,KACE,6BACE,6BACE,yBAAK9E,UAAU,oBACb,kBAAC,IAAD,CAAMkB,GAAG,IAAIlB,UAAU,qBAAvB,aAGJ,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAc+E,OAAK,EAACC,KAAK,IAAIP,UAAWtD,IACxC,kBAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,SAASP,UAAWP,IACtC,kBAAC,EAAD,CAAca,OAAK,EAACC,KAAK,YAAYP,UAAWtD,IAChD,kBAAC,EAAD,CAAc4D,OAAK,EAACC,KAAK,gBAAgBP,UAAWd,IACpD,kBAAC,EAAD,CAAcoB,OAAK,EAACC,KAAK,qBAAqBP,UAAWhB,IACzD,kBAAC,EAAD,CAAcuB,KAAK,gBAAgBP,UAAWQ,IAC9C,kBAAC,IAAD,CAAOR,UAAW7C,QCtB5BsD,IAASP,OACL,kBAAC,EAAD,MACAQ,SAASC,eAAe,W","file":"static/js/main.e80f5d3f.chunk.js","sourcesContent":["import Pokemon from './pokemon';\n   \nexport const POKEMONS: Pokemon[] = [\n {\n  id: 1,\n  name: \"Bulbizarre\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n{\n  id: 13,\n  name: \"Galopa\",\n  hp: 100,\n  cp: 10,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/078.png\",\n  types: [\"Feu\"],\n  created: new Date()\n},\n{\n id: 14,\n name: \"Grodoudou\",\n hp: 100,\n cp: 10,\n picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/040.png\",\n types: [\n \"Normal\",\n \"Fée\"\n ],\n created: new Date()\n},\n{\n id: 15,\n name: \"Aéromite\",\n hp: 100,\n cp: 10,\n picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/049.png\",\n types: [\n \"Insecte\",\n \"Poison\"\n ],\n created: new Date()\n},\n{\n id: 16,\n name: \"Persian\",\n hp: 100,\n cp: 10,\n picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/053.png\",\n types: [\n \"Normal\"\n ],\n created: new Date()\n},\n{\n id: 17,\n name: \"Akwakwak\",\n hp: 100,\n cp: 10,\n picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/055.png\",\n types: [\n \"Eau\"\n ],\n created: new Date()\n},\n{\n id: 18,\n name: \"Alakazam\",\n hp: 100,\n cp: 10,\n picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/065.png\",\n types: [\n \"Psy\"\n ],\n created: new Date()\n},\n{\n id: 19,\n name: \"Empiflor\",\n hp: 100,\n cp: 10,\n picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/071.png\",\n types: [\"Plante\", \"Poison\"],\n created: new Date()\n},\n{\n id: 20,\n name: \"Tentacruel\",\n hp: 100,\n cp: 10,\n picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/073.png\",\n types: [\"Eau\", \"Poison\"],\n created: new Date()\n},\n{\n id: 21,\n name: \"Nidoqueen\",\n hp: 100,\n cp: 10,\n picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/031.png\",\n types: [\"Poison\"],\n created: new Date()\n}\n];\n  \nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n \nexport default class PokemonService {\n  \n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if (this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    }\n    return new Promise( resolve => {\n      resolve(this.pokemons);\n      });\n  }\n \n  static getPokemon(id: number): Promise<Pokemon|null> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n    return new Promise(resolve => {\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    });\n  }\n \n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0\n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if (this.isDev){\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json() )\n      .catch(error => this.handleError(error));\n    }\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id)\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    });\n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if (this.isDev){\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}  \n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    });\n  }\n\n  static addPokemon(pokemon:Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n    \n    if (this.isDev){\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/JSON'}\n      };\n      return fetch('http://localhost:3001/pokemons', requestOptions)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n    return new Promise(resolve => {\n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    });\n  }\n\n  static searchPokemon(term:string): Promise<Pokemon[]> {\n    if (this.isDev){\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n    return new Promise(resolve => {\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n  }\n\n\n  static handleError(error:Error): void {\n      console.error(error);\n  }\n}","import { useState, useEffect} from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service'\n\n\nconst usePokemons = () => {\n    const  [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n    useEffect(() => {\n        PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\n    }, []);    \n\n    return pokemons;\n}\n\nexport default usePokemons;","    const formatDate = (date:Date = new Date()): string => {\n        return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n    }\n\n    export default formatDate;","const formatType = (type:string): string => {\n        let color: string;\n        \n        switch (type) {\n            case 'Feu': \n            color = 'red lighten-1'; \n            break; \n            case 'Eau': \n            color = 'blue lighten-1'; \n            break; \n            case 'Plante': \n            color = 'green lighten-1'; \n            break; \n            case 'Insecte': \n            color = 'brown lighten-1'; \n            break; \n            case 'Normal': \n            color = 'grey lighten-3'; \n            break; \n            case 'Vol': \n            color = 'blue lighten-3'; \n            break; \n            case 'Poison': \n            color = 'deep-purple accent-1'; \n            break; \n            case 'Fée': \n            color = 'pink lighten-4'; \n            break; \n            case 'Psy': \n            color = 'deep-purple darken-2'; \n            break; \n            case 'Electrik': \n            color = 'lime accent-1'; \n            break; \n            case 'Combat': \n            color = 'deep-orange'; \n            break; \n            default: \n            color = 'grey'; \n            break; \n        }\n        \n        return `chip ${color}`;\n    };\n\n    export default formatType;","import React, {FunctionComponent, useState} from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport {useHistory} from 'react-router-dom';\n\ntype Props = {\n    pokemon: Pokemon,\n    borderColor?: string \n};\n\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor= '#009688'}) => {\n    const [color, setColor] = useState<string>(); \n    const history = useHistory();\n\n    const showBorder = () => {\n        setColor(borderColor);\n    };\n\n    const hideBorder = () => {\n        setColor('#f5f5f5');\n    };\n\n    const gotToPokemon = (id: number) => {\n        history.push(`/pokemons/${id}`);\n    }\n\n    return (\n        <div className=\"col s6 m4\" \n            onClick={() => gotToPokemon(pokemon.id)}\n            onMouseEnter={showBorder} \n            onMouseLeave={hideBorder}>\n            <div className=\"card horizontal\"  style={{ borderColor: color }} >\n                <div className=\"card-image\"> \n                <img src={pokemon.picture} alt={pokemon.name}/>\n                </div>\n                <div className=\"card-stacked\">\n                    <div className=\"card-content\">\n                        <p>{pokemon.name}</p>\n                        <p><small>{formatDate(pokemon.created)}</small></p>\n                        {pokemon.types.map(type => (\n                        <span key={type} className={formatType(type)}>{type}</span>\n                        ))}\n                    </div>\n                </div>\n            </div> \n        </div>\n    )\n}\n\nexport default PokemonCard;","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n \nconst PokemonSearch: FunctionComponent = () => {\n  \n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n \n    if(term.length <= 2) {\n      setPokemons([]);\n      return;\n    }\n \n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n  \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n  \nexport default PokemonSearch;","import React, { FunctionComponent} from 'react';\nimport { Link } from 'react-router-dom';\nimport usePokemons from '../hooks/pokemon.hook';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonSearch from '../components/pokemon-search'\n\nconst PokemonList: FunctionComponent = () => {\n    const pokemons = usePokemons();  \n  \n return (\n  <div>\n    <h1 className=\"center\">Pokedex</h1>\n    <div className=\"container\">\n        <div className=\"row\">\n            <Link to={'/pokemons/new'} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                <i className=\"material-icons\">add</i>\n            </Link>\n        </div>\n        <div className=\"row\">\n            <PokemonSearch />\n            { pokemons.map((pokemon) => (\n                < PokemonCard key={pokemon.id} pokemon={pokemon}/>\n            ))}\n        </div>\n    </div>\n  </div>\n );\n}\n\nexport default PokemonList;","import React, { FunctionComponent } from 'react';\n  \nconst Loader: FunctionComponent = () => {\n   \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n   \nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport Loader from '../components/loader';\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id)\n    .then(pokemon =>  setPokemon(pokemon))\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                  <i className=\"material-icons\">edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created)}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/Pokemons\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n  \nconst PageNotFound: FunctionComponent = () => {\n  \n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n  \nexport default PageNotFound;","import React, { FunctionComponent, useState } from 'react';\nimport {useHistory} from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n  \ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\n\ntype Field =  {\n    value?: any,\n    error?: string,\n    isValid?:boolean\n};\n\ntype Form = {\n    picture: Field,\n    name: Field,\n    hp: Field,\n    cp: Field,\n    types: Field\n}; \n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n  const [form, setForm] = useState<Form>({\n      picture: {value: pokemon.picture},\n      name: {value: pokemon.name, isValid: true},\n      hp: {value: pokemon.hp, isValid: true},\n      cp: {value: pokemon.cp, isValid: true},\n      types: {value: pokemon.types, isValid: true}\n  });\n  \nconst history = useHistory();\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n\n  const hasType = (type: string): boolean => {\n      return form.types.value.includes(type);\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked;\n    let newField: Field;\n\n    if(checked) {\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n    }\n    \n    setForm({...form, ...{ types: newField }});\n  }\n\n  const handleInputChange = (e:React.ChangeEvent<HTMLInputElement>):void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { value: fieldValue };\n\n    setForm({...form, ...{ [fieldName]: newField}});\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n    pokemon.name = form.name.value;\n    pokemon.hp = form.hp.value;\n    pokemon.cp = form.cp.value;\n    (isAddForm()) && (pokemon.picture = form.picture.value);\n    pokemon.types = form.types.value;\n    isEditForm ? updatePokemon() : addPokemon();\n    }\n  };\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon)\n    .then ( () => history.push(`/pokemons`));\n  };\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon)\n    .then ( () => history.push(`/pokemons/${pokemon.id}`));\n  };\n\n  const isAddForm = () => {\n    return !isEditForm;\n  }\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator url\n    if(isAddForm()) {\n\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = 'L\\'url n\\'est pas valide.';\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n        newForm = { ...newForm, ...{ picture: newField } };\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\n        newForm = { ...newForm, ...{ picture: newField } };\n      }\n    }\n\n    // Validator name\n    if(!/^[a-zA-Zàéèïîê ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  }\n\nconst isTypesValid = (type: string): boolean => {\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décocher ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n    \n    // Cas n°1: Le pokémon a au moins 3 types.\n    // Dans ce cas il faut empêcher l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n    if (form.types.value.length >= 3 && !hasType(type)) { \n      return false; \n    } \n    \n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n    return true;\n  }\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n            { isEditForm && (\n            <div className=\"card-image\">\n\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n              </span>\n            </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                { isAddForm() && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"picture\">Picture path</label>\n                  <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                  {form.picture.error &&\n                    <div className=\"card-panel red accent-1\"> {form.picture.error} </div>\n                  }\n                </div> )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {form.name.error &&\n                    <div className=\"card-panel red accent-1\"> {form.name.error} </div>\n                  }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.hp.error &&\n                    <div className=\"card-panel red accent-1\"> {form.hp.error} </div>\n                  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.cp.error &&\n                    <div className=\"card-panel red accent-1\"> {form.cp.error} </div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Loader from '../components/loader';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n\n \ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id)\n    .then(pokemon =>  setPokemon(pokemon))\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","export default class Pokemon {\n // 1. Typage des propriétés d'un pokémon.\n id: number;\n hp: number;\n cp: number;\n name: string;\n picture: string;\n types: Array<string>;\n created: Date;\n  \n // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n constructor(\n  id: number,\n  hp: number = 100,\n  cp: number = 10,\n  name: string = '...',\n  picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\n  types: Array<string> = ['Normal'],\n  created: Date = new Date()\n ) {\n  // 3. Initialisation des propiétés d'un pokémons.\n  this.id = id;\n  this.hp = hp;\n  this.cp = cp;\n  this.name = name;\n  this.picture = picture;\n  this.types = types;\n  this.created = created;\n }\n}","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n\n\n \n  \nconst PokemonAdd: FunctionComponent = () => {\n  const [id] = useState<number>(new Date().getTime());\n  const [pokemon] = useState<Pokemon>(new Pokemon(id));\n     \n  return (\n    <div>\n        <div className=\"row\">\n            <h2 className=\"header center\">Ajouter un nouveau Pokemon</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n        </div>\n    </div>\n  );\n}\n  \nexport default PokemonAdd;","export default class AuthenticationService {\n    static isAuthenticated:boolean = false;\n\n    static login(username: string, password: string): Promise<boolean> {\n        const isAuthenticated = (username === \"bulba\" && password=== \"bulbo\")\n\n        return new Promise(resolve => {\n            setTimeout( () => {\n                this.isAuthenticated = isAuthenticated;\n                resolve(isAuthenticated);\n            }, 1000);\n        });\n    }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (bulba / bulbo)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 5) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 5 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        history.push('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n  \nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthenticated = AuthenticationService.isAuthenticated;\n    if (!isAuthenticated) {    \n      return <Redirect to={{ pathname: '/login' }} />\n    }\n  \n    return <Component {...props} />\n  }} />\n);\n  \nexport default PrivateRoute;","import React, { FunctionComponent} from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PokemonList from './pages/pokemon-list';\nimport PokemonDetail from './pages/pokemon-detail';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PokemonAdd from './pages/pokemon-add';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\n\nconst App: FunctionComponent = () => {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <div className=\"nav-wrapper teal\">\n            <Link to=\"/\" className=\"brand-logo center\">Pokedex</Link>\n          </div>\n        </nav>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={PokemonList} />\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\n          <PrivateRoute exact path=\"/pokemons/new\" component={PokemonAdd}/>\n          <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\n          <PrivateRoute path=\"/pokemons/:id\" component={PokemonDetail} />\n          <Route component={PageNotFound}/>\n        </Switch>\n      </div>\n\n    </Router>\n )\n}\n  \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}